/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PerformanceReview as PrismaPerformanceReview,
  EmployeeProfile as PrismaEmployeeProfile,
} from "@prisma/client";

export class PerformanceReviewServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PerformanceReviewCountArgs, "select">
  ): Promise<number> {
    return this.prisma.performanceReview.count(args);
  }

  async performanceReviews(
    args: Prisma.PerformanceReviewFindManyArgs
  ): Promise<PrismaPerformanceReview[]> {
    return this.prisma.performanceReview.findMany(args);
  }
  async performanceReview(
    args: Prisma.PerformanceReviewFindUniqueArgs
  ): Promise<PrismaPerformanceReview | null> {
    return this.prisma.performanceReview.findUnique(args);
  }
  async createPerformanceReview(
    args: Prisma.PerformanceReviewCreateArgs
  ): Promise<PrismaPerformanceReview> {
    return this.prisma.performanceReview.create(args);
  }
  async updatePerformanceReview(
    args: Prisma.PerformanceReviewUpdateArgs
  ): Promise<PrismaPerformanceReview> {
    return this.prisma.performanceReview.update(args);
  }
  async deletePerformanceReview(
    args: Prisma.PerformanceReviewDeleteArgs
  ): Promise<PrismaPerformanceReview> {
    return this.prisma.performanceReview.delete(args);
  }

  async getEmployeeProfile(
    parentId: string
  ): Promise<PrismaEmployeeProfile | null> {
    return this.prisma.performanceReview
      .findUnique({
        where: { id: parentId },
      })
      .employeeProfile();
  }
}
