/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ReviewTemplate as PrismaReviewTemplate,
  EmployeeProfile as PrismaEmployeeProfile,
} from "@prisma/client";

export class ReviewTemplateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReviewTemplateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.reviewTemplate.count(args);
  }

  async reviewTemplates(
    args: Prisma.ReviewTemplateFindManyArgs
  ): Promise<PrismaReviewTemplate[]> {
    return this.prisma.reviewTemplate.findMany(args);
  }
  async reviewTemplate(
    args: Prisma.ReviewTemplateFindUniqueArgs
  ): Promise<PrismaReviewTemplate | null> {
    return this.prisma.reviewTemplate.findUnique(args);
  }
  async createReviewTemplate(
    args: Prisma.ReviewTemplateCreateArgs
  ): Promise<PrismaReviewTemplate> {
    return this.prisma.reviewTemplate.create(args);
  }
  async updateReviewTemplate(
    args: Prisma.ReviewTemplateUpdateArgs
  ): Promise<PrismaReviewTemplate> {
    return this.prisma.reviewTemplate.update(args);
  }
  async deleteReviewTemplate(
    args: Prisma.ReviewTemplateDeleteArgs
  ): Promise<PrismaReviewTemplate> {
    return this.prisma.reviewTemplate.delete(args);
  }

  async getEmployeeProfile(
    parentId: string
  ): Promise<PrismaEmployeeProfile | null> {
    return this.prisma.reviewTemplate
      .findUnique({
        where: { id: parentId },
      })
      .employeeProfile();
  }
}
